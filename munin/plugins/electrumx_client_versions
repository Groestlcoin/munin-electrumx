#!/bin/sh
# -*- sh -*-

: << =cut

=head1 NAME

electrumx_client_versions - Plugin to monitor ElectrumX server.

=head1 CONFIGURATION

No configuration

=head1 NOTES

Uses the command "electrumx_rpc.py"

=head1 AUTHOR

shsmith

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

electrumx_rpc=/usr/local/bin/electrumx_rpc.py

# return count+1 and version for current and all previously seen versions
known_versions() {
	vfile=/tmp/electrumx_client_versions

	# get new version items
	${electrumx_rpc} sessions | grep -v ID | tr '.' '-' | awk '{print $3}' | grep -v ID > ${vfile}.new

	# combine with previously known versions
	if [ -e ${vfile}.known ]; then
		cat ${vfile}.known >> ${vfile}.new
	fi
	sort -V < ${vfile}.new | uniq > ${vfile}.known

	# return count+1 and version
	sort -V ${vfile}.new | uniq -c
}

if [ -e $MUNIN_LIBDIR/plugins/plugin.sh ]; then
	. $MUNIN_LIBDIR/plugins/plugin.sh
fi

if [ "$1" = "autoconf" ]; then
	if ( ${electrumx_rpc} getinfo >/dev/null 2>&1 ); then
		echo yes
		exit 0
	else
		if [ $? -eq 127 ]; then
			echo "no (could not run \"${electrumx_rpc}\")"
			exit 0
		else
			echo no
			exit 0
		fi
	fi
fi

if [ "$1" = "config" ]; then
	echo 'graph_title Electrum Client Versions'
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel sessions'
	echo 'graph_category ElectrumX'
	known_versions | awk '{v=$2; gsub("-",".",$2); printf "version_%s.label %s\nversion_%s.draw AREASTACK\n", v, $2, v}'
	exit 0
fi

# subtract 1 from each count (allows 0 to be retained in charts)
known_versions | awk '{printf "version_%s.value %d\n", $2, $1-1}'
